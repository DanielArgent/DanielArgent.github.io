{"version":3,"sources":["i18n.js","components/CategoryListItem.js","components/CategoryList.js","components/UnitInput.js","components/UnitOutput.js","components/UnitSwapButton.js","components/CategoryConverter.js","components/CategoryProvider.js","components/ConverterBody.js","App.js","components/LocalizationContext.js","serviceWorker.js","index.js"],"names":["langs","ru","_name","langSwitcherAlt","categories","invalidValue","categoryNames","yield","mass","temperature","units","mkg","mg","g","kg","quintal","pound","t","amu","tonnesAtHectar","quintalAtHectar","kilogrammAtHectar","kilogrammAtSquareMeters","tonnesAtAcre","quintalAtAcre","kilogrammAtAcre","celsius","kelvin","farenheit","reomure","remer","rankin","en","commonStyles","cursor","marginRight","padding","styles","active","backgroundColor","color","borderRadius","unactive","CategoryListItem","category","onClick","style","isActive","name","CategoryList","onItemClick","lang","map","key","id","div","marginBottom","input","paddingLeft","height","width","position","left","outline","border","borderColor","select","UnitInput","unitId","onUnitChange","onValueChange","defaultValue","type","onChange","unit","index","toString","value","selected","UnitOutput","Number","isNaN","readOnly","UnitSwapButton","className","viewBox","fill","d","makeChanger","f","e","parseInt","target","options","selectedIndex","convert","fromId","toId","fromUnit","find","fromBase","toBase","fixOutOfRange","length","CategoryConverter","React","useState","fromUnitValue","setFromUnitValue","fromUnitId","setFromUnitId","toUnitId","setToUnitId","hasError","setError","x","parseFloat","fruname","cache","getCategoryProviderForLanguage","undefined","massUnits","yieldUnits","temperatureUnits","availableCategories","getCategoryById","requiredCategoryId","props","ConverterBody","categoryProvider","state","activeCategory","nextProps","this","refreshActiveCategory","setState","forEach","currentCategory","changeActiveCategory","bind","Component","createContext","header","fontSize","fontWeight","langSwitcher","float","display","paddingTop","footer","textAlign","bottom","App","alt","src","switchLang","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac972bf1.chunk.js","sourcesContent":["const langs = {\r\n\tru: {\r\n\t\t_name: \"Russian\",\r\n\r\n\t\tlangSwitcherAlt: \"Сменить язык\",\r\n\t\tcategories: \"Категории\",\r\n\t\tinvalidValue: \"Ошибка: пожалйуйста, введите число!\",\r\n\r\n\t\tcategoryNames: {\r\n\t\t\tyield: \"Урожайность\",\r\n\t\t\tmass: \"Масса\",\r\n\t\t\ttemperature: \"Температура\"\r\n\t\t},\r\n\r\n\t\tunits: {\r\n\t\t\tmass: {\r\n\t\t\t\tmkg: \"мкг\",\r\n\t\t\t\tmg: \"мг\",\r\n\t\t\t\tg: \"г\",\r\n\t\t\t\tkg: \"кг\",\r\n\t\t\t\tquintal: \"ц\",\r\n\t\t\t\tpound: \"фунт\",\r\n\t\t\t\tt: \"т\",\r\n\t\t\t\tamu: \"а. е. м.\",\r\n\t\t\t},\r\n\r\n\t\t\tyield: {\r\n\t\t\t\ttonnesAtHectar: \"т/га\",\r\n\t\t\t\tquintalAtHectar: \"ц/га\",\r\n\t\t\t\tkilogrammAtHectar: \"кг/га\",\r\n\t\t\t\tkilogrammAtSquareMeters: \"кг/м^2\",\r\n\t\t\t\ttonnesAtAcre: \"т/акр\",\r\n\t\t\t\tquintalAtAcre: \"ц/акр\",\r\n\t\t\t\tkilogrammAtAcre: \"кг/акр\",\r\n\t\t\t},\r\n\r\n\t\t\ttemperature: {\r\n\t\t\t\tcelsius: \"°C\",\r\n\t\t\t\tkelvin: \"K\",\r\n\t\t\t\tfarenheit: \"°F\",\r\n\t\t\t\treomure: \"°R\", // градус Реомюра\r\n\t\t\t\tremer: \"°Rø\",  // градус Ремера\r\n\t\t\t\trankin: \"°Ra\",\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\ten: {\r\n\t\t_name: \"English\",\r\n\r\n\t\tlangSwitcherAlt: \"Change language\",\r\n\t\tcategories: \"Categories\",\r\n\t\tinvalidValue: \"Error: please enter a number!\",\r\n\r\n\t\tcategoryNames: {\r\n\t\t\tyield: \"Yield\",\r\n\t\t\tmass: \"Mass\",\r\n\t\t\ttemperature: \"Temperature\"\r\n\t\t},\r\n\r\n\t\tunits: {\r\n\t\t\tmass: {\r\n\t\t\t\tmkg: \"µg\",\r\n\t\t\t\tmg: \"mg\",\r\n\t\t\t\tg: \"g\",\r\n\t\t\t\tkg: \"kg\",\r\n\t\t\t\tquintal: \"quintal\",\r\n\t\t\t\tpound: \"lb\",\r\n\t\t\t\tt: \"t\",\r\n\t\t\t\tamu: \"u\"\r\n\t\t\t},\r\n\r\n\t\t\tyield: {\r\n\t\t\t\ttonnesAtHectar: \"t/ha\",\r\n\t\t\t\tquintalAtHectar: \"quintal/ha\",\r\n\t\t\t\tkilogrammAtHectar: \"kg/ha\",\r\n\t\t\t\tkilogrammAtSquareMeters: \"kg/m^2\",\r\n\t\t\t\ttonnesAtAcre: \"t/ac\",\r\n\t\t\t\tquintalAtAcre: \"quintal/ac\",\r\n\t\t\t\tkilogrammAtAcre: \"kg/ac\",\r\n\t\t\t},\r\n\r\n\t\t\ttemperature: {\r\n\t\t\t\tcelsius: \"°C\",\r\n\t\t\t\tkelvin: \"K\",\r\n\t\t\t\tfarenheit: \"°F\",\r\n\t\t\t\treomure: \"°R\",\r\n\t\t\t\tremer: \"°Rø\",\r\n\t\t\t\trankin: \"°Ra\",\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default langs;","import React from 'react';\r\n\r\nconst commonStyles = {\r\n\tcursor: 'pointer',\r\n\tmarginRight: '1rem',\r\n\tpadding: '5px',\r\n};\r\n\r\nconst styles = {\r\n\tactive: {\r\n\t\tbackgroundColor: '#2196F3',\r\n\t\tcolor: '#ffffff',\r\n\t\tborderRadius: '0px 50rem 50rem 0px',\r\n\r\n\t\t...commonStyles\r\n\t},\r\n\r\n\tunactive: {\r\n\t\t...commonStyles\r\n\t}\r\n};\r\n\r\nexport default function CategoryListItem({ category, onClick }) {\r\n\treturn (\r\n\t\t<div style={ category.isActive ? styles.active : styles.unactive } onClick={() => onClick(category)}>\r\n\t\t\t{category.name}\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport CategoryListItem from './CategoryListItem';\r\n\r\nexport default function CategoryList({ categories, onItemClick, lang }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{lang.categories}</h4>\r\n\r\n\t\t\t{ categories.map(category => \r\n\t\t\t\t\t<CategoryListItem key={category.id} category={category} onClick={onItemClick} />) }\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react'\r\n\r\nconst styles = {\r\n\tdiv: {\r\n\t\tmarginBottom: '5px',\r\n\t},\r\n\r\n\tinput: {\r\n\t\tmarginRight: '5px',\r\n\t\tpaddingLeft: '5px',\r\n\t\theight: '30px',\r\n\t\twidth: '169px',\r\n\t\tposition: 'relative',\r\n\t\tleft: 0,\r\n\t\toutline: 'none',\r\n\t\tborder: '1px solid #cdcdcd',\r\n\t\tborderColor: 'rgba(0, 0, 0, .15)'\r\n\t},\r\n\r\n\tselect: {\r\n\t\tborder: 'none'\r\n\t}\r\n};\r\n\r\nexport default function UnitInput({ units, unitId, onUnitChange, onValueChange, defaultValue }) {\r\n\t\treturn (\r\n\t\t\t<div style={styles.div}>\r\n\t\t\t\t<input style={styles.input} type=\"text\" defaultValue={defaultValue} onChange={onValueChange}/>\r\n\r\n\t\t\t\t<select style={styles.select} onChange={onUnitChange}>\r\n\t\t\t\t\t{ \r\n\t\t\t\t\t\tunits.map((unit, index) => {\r\n\t\t\t\t\t\t\tif(index === unitId) {\r\n\t\t\t\t\t\t\t\treturn <option key={index.toString()} value={index} selected>{unit}</option>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn <option key={index.toString()} value={index}>{unit}</option>\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t);\r\n}","import React from \"react\";\r\n\r\nconst styles = {\r\n  div: {\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  input: {\r\n    marginRight: \"5px\",\r\n    paddingLeft: \"5px\",\r\n    height: \"30px\",\r\n    position: \"relative\",\r\n    width: \"169px\",\r\n    left: 0,\r\n    outline: \"none\",\r\n    border: \"1px solid #cdcdcd\",\r\n    borderColor: \"rgba(0, 0, 0, .15)\",\r\n  },\r\n\r\n  select: {\r\n    border: \"none\",\r\n  },\r\n};\r\n\r\nexport default function UnitOutput({ units, unitId, onUnitChange, value }) {\r\n  return (\r\n    <div style={styles.div}>\r\n      <input\r\n        style={styles.input}\r\n        type=\"text\"\r\n        value={Number.isNaN(value) ? \"\" : value}\r\n        readOnly\r\n      />\r\n\r\n      <select style={styles.select} onChange={onUnitChange}>\r\n        {units.map((unit, index) => {\r\n          if (index === unitId) {\r\n            return (\r\n              <option key={index.toString()} value={index} selected>\r\n                {unit}\r\n              </option>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <option key={index.toString()} value={index}>\r\n              {unit}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function UnitSwapButton({ onClick }) {\r\n  return (\r\n    <div className=\"unitSwapButton\" onClick={onClick}>\r\n      <svg\r\n        style={{ width: \"24px\", height: \"24px\" }}\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <path\r\n          fill=\"#000000\"\r\n          d=\"M9,3L5,7H8V14H10V7H13M16,17V10H14V17H11L15,21L19,17H16Z\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport UnitInput from \"./UnitInput\";\r\nimport UnitOutput from \"./UnitOutput\";\r\nimport UnitSwapButton from \"./UnitSwapButton\";\r\n\r\nfunction makeChanger(f) {\r\n  return (e) => f(parseInt(e.target.options[e.target.selectedIndex].value));\r\n}\r\n\r\nfunction convert(units, value, fromId, toId) {\r\n  let fromUnit = units.find((unit) => unit.id === fromId);\r\n  let toUnit = units.find((unit) => unit.id === toId);\r\n\r\n  return toUnit.fromBase(fromUnit.toBase(value));\r\n}\r\n\r\nfunction fixOutOfRange(units, id) {\r\n  if (id >= units.length) {\r\n    return 0;\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nexport default function CategoryConverter({ name, units, lang }) {\r\n  const [fromUnitValue, setFromUnitValue] = React.useState(0);\r\n  const [fromUnitId, setFromUnitId] = React.useState(units[0].id);\r\n  const [toUnitId, setToUnitId] = React.useState(units[0].id);\r\n  const [hasError, setError] = React.useState(false);\r\n\r\n  function swapUnits() {\r\n    let fruname = fromUnitId;\r\n    setFromUnitId(toUnitId);\r\n    setToUnitId(fruname);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>{name}</h4>\r\n\r\n      <UnitInput\r\n        units={units.map((x) => x.name)}\r\n        defaultValue={fromUnitValue}\r\n        unitId={fixOutOfRange(units, fromUnitId)}\r\n        onUnitChange={makeChanger(setFromUnitId)}\r\n        onValueChange={(e) => {\r\n          let value = parseFloat(e.target.value);\r\n          setError(Number.isNaN(value));\r\n\t\t\t\t\tsetFromUnitValue(value);\r\n        }}\r\n      />\r\n\r\n      <UnitSwapButton onClick={swapUnits} />\r\n\r\n      <UnitOutput\r\n        units={units.map((x) => x.name)}\r\n        unitId={fixOutOfRange(units, toUnitId)}\r\n        value={convert(\r\n          units,\r\n          fromUnitValue,\r\n          fixOutOfRange(units, fromUnitId),\r\n          fixOutOfRange(units, toUnitId)\r\n        )}\r\n        onUnitChange={makeChanger(setToUnitId)}\r\n      />\r\n\r\n      {hasError && <span className=\"error\">{lang.invalidValue}</span>}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CategoryConverter from \"./CategoryConverter.js\";\r\n\r\nconst cache = {};\r\n\r\n/// This function creates category provider for given language\r\nexport default function getCategoryProviderForLanguage(lang) {\r\n  if (cache[lang._name] !== undefined) {\r\n    return cache[lang._name];\r\n  }\r\n\r\n  const massUnits = [\r\n    {\r\n      id: 0,\r\n      name: lang.units.mass.mkg,\r\n      toBase: (value) => value / 10 ** 9,\r\n      fromBase: (value) => value * 10 ** 9,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: lang.units.mass.mg,\r\n      toBase: (value) => value / 10 ** 6,\r\n      fromBase: (value) => value * 10 ** 6,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: lang.units.mass.g,\r\n      toBase: (value) => value / 10 ** 3,\r\n      fromBase: (value) => value * 10 ** 3,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: lang.units.mass.kg,\r\n      toBase: (value) => value,\r\n      fromBase: (value) => value,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: lang.units.mass.quintal,\r\n      toBase: (value) => value * 10 ** 2,\r\n      fromBase: (value) => value / 10 ** 2,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: lang.units.mass.t,\r\n      toBase: (value) => value * 10 ** 3,\r\n      fromBase: (value) => value / 10 ** 3,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: lang.units.mass.pound,\r\n      toBase: (value) => value * 0.45359237,\r\n      fromBase: (value) => value / 0.45359237,\r\n    },\r\n    {\r\n      id: 7,\r\n      name: lang.units.mass.amu,\r\n      toBase: (value) => value * 1.6605390666 * 10 ** -27,\r\n      fromBase: (value) => value / (1.6605390666 * 10 ** -27),\r\n    },\r\n  ];\r\n\r\n  const yieldUnits = [\r\n    {\r\n      id: 0,\r\n      name: lang.units.yield.tonnesAtHectar,\r\n      toBase: (value) => value,\r\n      fromBase: (value) => value,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: lang.units.yield.quintalAtHectar,\r\n      toBase: (value) => value / 10,\r\n      fromBase: (value) => value * 10,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: lang.units.yield.kilogrammAtHectar,\r\n      toBase: (value) => value * 1000,\r\n      fromBase: (value) => value / 1000,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: lang.units.yield.kilogrammAtSquareMeters,\r\n      toBase: (value) => value * 10000,\r\n      fromBase: (value) => value / 10000,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: lang.units.yield.tonnesAtAcre,\r\n      toBase: (value) => value / 0.405,\r\n      fromBase: (value) => value * 0.405,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: lang.units.yield.quintalAtAcre,\r\n      toBase: (value) => value / 0.405 / 10, // ??\r\n      fromBase: (value) => value * 0.405 * 10,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: lang.units.yield.kilogrammAtAcre,\r\n      toBase: (value) => value / 0.405 / 1000,\r\n      fromBase: (value) => value * 0.405 * 1000,\r\n    },\r\n  ];\r\n\r\n  const temperatureUnits = [\r\n    {\r\n      id: 0,\r\n      name: lang.units.temperature.celsius,\r\n      toBase: (value) => value,\r\n      fromBase: (value) => value,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: lang.units.temperature.kelvin,\r\n      toBase: (value) => value - 273.15,\r\n      fromBase: (value) => value + 273.15,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: lang.units.temperature.farenheit,\r\n      toBase: (value) => (5 / 9) * (value - 32),\r\n      fromBase: (value) => (9 / 5) * value + 32,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: lang.units.temperature.reomure,\r\n      toBase: (value) => 1.25 * value,\r\n      fromBase: (value) => value * 0.8,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: lang.units.temperature.remer,\r\n      toBase: (value) => (40 / 21) * (value - 7.5),\r\n      fromBase: (value) => (21 / 40) * value + 7.5,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: lang.units.temperature.rankin,\r\n      toBase: (value) => value / 1.8 - 273.15,\r\n      fromBase: (value) => (value + 273.15) * 1.8,\r\n    },\r\n  ];\r\n\r\n  const availableCategories = [\r\n    <CategoryConverter\r\n      id=\"cat0\"\r\n      name={lang.categoryNames.yield}\r\n\t\t\tunits={yieldUnits}\r\n\t\t\tlang={lang}\r\n    />,\r\n    <CategoryConverter\r\n      id=\"cat1\"\r\n      name={lang.categoryNames.mass}\r\n\t\t\tunits={massUnits}\r\n\t\t\tlang={lang}\r\n    />,\r\n    <CategoryConverter\r\n      id=\"cat2\"\r\n      name={lang.categoryNames.temperature}\r\n\t\t\tunits={temperatureUnits}\r\n\t\t\tlang={lang}\r\n    />,\r\n  ];\r\n\r\n  function getCategoryById(requiredCategoryId) {\r\n    for (const category of availableCategories) {\r\n      if (category.props.id === requiredCategoryId) {\r\n        return category;\r\n      }\r\n    }\r\n  }\r\n\r\n  const categories = [\r\n    { id: \"cat0\", name: lang.categoryNames.yield, isActive: true },\r\n    { id: \"cat1\", name: lang.categoryNames.mass, isActive: false },\r\n    { id: \"cat2\", name: lang.categoryNames.temperature, isActive: false },\r\n  ];\r\n\r\n  return (cache[lang._name] = { categories, getCategoryById });\r\n}\r\n","import React from 'react';\r\nimport CategoryList from './CategoryList';\r\nimport getCategoryProviderForLanguage from './CategoryProvider';\r\n\r\nexport default class ConverterBody extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.lang = props.lang;\r\n\t\tthis.categoryProvider = getCategoryProviderForLanguage(props.lang);\r\n\r\n\t\tthis.state = {\r\n\t\t\tactiveCategory: this.categoryProvider.categories[0]\r\n\t\t};\r\n\t}\r\n\r\n\t// Calls when language is changed (if parent on rebuild)\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tthis.lang = nextProps.lang;\r\n\t\tthis.categoryProvider = getCategoryProviderForLanguage(nextProps.lang);\r\n\t\tthis.refreshActiveCategory(this.state.activeCategory);\r\n\t}\r\n\r\n\t// Calls when activated new category\r\n\tchangeActiveCategory(category) {\r\n\t\tthis.refreshActiveCategory(category);\r\n\t\tthis.setState( { activeCategory: category } );\r\n\t}\r\n\r\n\trefreshActiveCategory(category) {\r\n\t\tthis.categoryProvider.categories.forEach(currentCategory =>\r\n\t\t\tcurrentCategory.isActive = category.id === currentCategory.id);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"converterBody\">\r\n\t\t\t\t<CategoryList \r\n\t\t\t\t\tlang={this.lang}\r\n\t\t\t\t\tcategories={this.categoryProvider.categories} \r\n\t\t\t\t\tonItemClick={this.changeActiveCategory.bind(this)} />\r\n\t\r\n\t\t\t\t{ this.categoryProvider.getCategoryById(this.state.activeCategory.id) }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\nimport langs from './i18n';\nimport ConverterBody from './components/ConverterBody';\nimport LocalizationContext from './components/LocalizationContext';\n\nconst styles = {\n\theader: {\n\t\tbackgroundColor: '#000000',\n\t\tcolor: '#ffffff',\n\t\tpadding: '1rem',\n\t\tmarginBottom: '1rem',\n\t\tfontSize: 'larger',\n\t\tfontWeight: 600,\n\t},\n\n\tlangSwitcher: {\n\t\tfloat: 'right',\n\t\tposition: 'relative',\n\t\tdisplay: 'inline-block',\n\t\twidth: '1.33333333em',\n\t\tpaddingTop: '4px',\n\t\tcursor: 'pointer'\n\t},\n\n\tfooter: {\n\t\tbackgroundColor: '#000000',\n\t\tcolor: '#ffffff9f',\n\t\tpadding: '1rem 0rem 1rem 0rem',\n\t\ttextAlign: 'center',\n\t\twidth: '100%',\n\t\tbottom: 0,\n\t\tposition: 'absolute',\n\t\tfontSize: 'smaller'\n\t}\n}\n\n// Returns image for language switch button\nfunction selectFlag(lang) {\n\treturn lang === langs.en ? \"./ru.svg\" : \"./gb.svg\";\n}\n\nexport default class App extends Component {\n\tstate = {\n\t\tlang: langs.ru\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header style={styles.header}>\n\t\t\t\t\tUnit Converter\n\t\t\t\t\t<img style={styles.langSwitcher} alt={this.state.lang.langSwitcherAlt} \n\t\t\t\t\t\tsrc={selectFlag(this.state.lang)} onClick={this.switchLang.bind(this)} />\n\t\t\t\t</header>\n\t\n\t\t\t\t<ConverterBody lang={this.state.lang} />\n\n\t\t\t\t<footer style={styles.footer}>\n\t\t\t\t\t&copy; Tsvikevich Denis 2020\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tswitchLang() {\n\t\tthis.setState({ lang: this.state.lang === langs.ru ? langs.en : langs.ru });\n\t}\n}\n","import React from 'react';\r\n\r\nconst LocalizationContext = React.createContext();\r\n\r\nexport default LocalizationContext;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}